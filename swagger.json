{
  "openapi": "3.0.0",
  "info": {
    "title": "API Starter Template",
    "version": "1.0.0",
    "description": "A production-ready API starter template with TypeScript, Express, PostgreSQL, and Prisma",
    "contact": {
      "name": "API Support",
      "email": "support@example.com"
    },
    "license": {
      "name": "MIT",
      "url": "https://opensource.org/licenses/MIT"
    }
  },
  "servers": [
    {
      "url": "https://parts.up.railway.app/api/v1",
      "description": "Production server"
    },
    {
      "url": "http://localhost:3000/api/v1",
      "description": "Development server"
    }
  ],
  "paths": {
    "/": {
      "get": {
        "tags": [
          "General"
        ],
        "summary": "API Welcome",
        "description": "Returns basic API information",
        "responses": {
          "200": {
            "description": "API information",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "version": {
                      "type": "string"
                    },
                    "endpoints": {
                      "type": "object",
                      "properties": {
                        "health": {
                          "type": "string"
                        },
                        "metrics": {
                          "type": "string"
                        },
                        "docs": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/health": {
      "get": {
        "tags": [
          "Monitoring"
        ],
        "summary": "Health check",
        "description": "Returns the health status of the service including database connectivity",
        "responses": {
          "200": {
            "description": "Service is healthy",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "healthy"
                    },
                    "timestamp": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "service": {
                      "type": "string"
                    },
                    "version": {
                      "type": "string"
                    },
                    "database": {
                      "type": "string",
                      "example": "connected"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/metrics": {
      "get": {
        "tags": [
          "Monitoring"
        ],
        "summary": "System metrics",
        "description": "Returns system metrics including CPU, memory, and uptime",
        "responses": {
          "200": {
            "description": "System metrics",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "timestamp": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "service": {
                      "type": "string"
                    },
                    "version": {
                      "type": "string"
                    },
                    "uptime": {
                      "type": "number"
                    },
                    "memory": {
                      "type": "object"
                    },
                    "cpu": {
                      "type": "object"
                    },
                    "environment": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "tags": [
    {
      "name": "General",
      "description": "General API endpoints"
    },
    {
      "name": "Monitoring",
      "description": "Health and metrics endpoints"
    }
  ],
  "components": {}
}